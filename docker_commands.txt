docker run nginx
docker run ubuntu sleep 5
docker run -d {image_name} (docker run -d ubuntu sleep 10)
docker run -e APP_COLOR=blue mmumshad/simple-webapp-color
docker run -e APP_COLOR=blue -p 38282:8080 --name blue-app kodekloud/simple-webapp
docker run --entrypoint sleep2.0 ubuntu-sleeper 10
docker -H=ipa:port run nginx
docker run --cpus=.5 ubuntu
docker run --memory=100m ubuntu
docker run ubuntu --network=none
docker run -d --name=vote -p 5000:80 --link redis:redis voting-app
docker run -d --restart=always ubuntu

docker attach {container_id}

docker ps

docker ps -a

docker stop {container_name}

docker rm {container_name}

docker images
docker image prune -a //remove any image that doesn't have any running container

docker rmi {image_name}

docker pull {image_name}

docker exec {container_name} cat /etc/hosts

docker inspect {container_name/container_id}

docker logs {container_name/container_id}

docker build Dockerfile -t psshri/mywebapp
docker build -t webapp .

docker login
docker push psshri/mywebapp

docker history {image_name}

docker-compose up

docker volume create data_volume
docker run -v data_volume:/var/lib/mysql mysql
docker run -v /data/mysql:/var/lib/mysql mysql
docker run --mount type=bind,source=/data/mysql,target=/var/lib/mysql mysql

docker network create --driver bridge --subnet 182.18.0.0/16 --gateway 182.18.0.1 custom-isolated-network
docker network ls
docker network inspect {network_name}

docker login private-registry.io

docker run -d -p 5000:5000 --name registry registry:2
docker image tag my-image localhost:5000/my-image
docker push localhost:5000/my-image
docker pull localhost:5000/my-image
docker pull 192.168.56.100/my-image